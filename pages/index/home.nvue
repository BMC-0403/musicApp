<template>
	<view>
		<!-- 首页显示内容 -->
		<scroll-view scroll-y="true" @scrolltolower="LoadMore" :style="{'height': scrollH+'px'}">
			
			<view class="flex flex-wrap py-2 justify-between">
				<view class="flex flex-column mb-4 m-1" v-for="(item,index) in list_home" :key="index" @tap="selectMusic(index)">
					<image :src="item.cover" style="width: 330rpx;height: 330rpx;" mode="aspectFill"></image>
					<text class="text-white text-ellipsis-2 font" style="width: 330rpx;">{{item.title}}</text>
					<view class="font-sm text-light-muted flex align-center" style="width: 330rpx;height: 35rpx;">
						<view class="text-ellipsis" style="max-width: 150rpx;">{{item.author}}</view>
						<text class="font-weight-bolder font-lger">·</text>
						{{item.playNum|formatPlayNum}}次播放
					</view>
					<view v-if="item.upload_author" class="text-light-muted font-sm text-ellipsis" style="width: 330rpx;">发布者：{{item.upload_author}}</view>
				</view>
			</view>
			<!-- 下拉加载条 -->
			<view class="mb-2" style="margin-top: -50rpx;">
				<uni-load-more :status="loadState" :contentText="loadText"></uni-load-more>
			</view>
		</scroll-view>
	</view>
</template>

<script>
	import uniLoadMore from "@/components/uni-load-more/uni-load-more.vue"
	import service from "@/service.js"
	import {
		mapMutations,
		mapState
	} from "vuex";
	let demo = [{
		img: "/static/demo/demo1.jpg",
		src: "https://taofen-bucket.oss-cn-beijing.aliyuncs.com/test.mp3",
		title: "YHLQMD",
		author: 'Shart Foeir',
		desc: "描述"
	}];
	export default {
		components: {
			uniLoadMore
		},
		data() {
			return {
				loadState: "more",
				loadText: {
					contentdown: "下拉显示更多",
					contentrefresh: "正在加载...",
					contentnomore: "没有更多数据了"
				},
				scrollH: 800,
				tabIndex: 0,
				tabBar: [{
						name: "首页",
						icon: "iconshouye"
					},
					{
						name: "串烧音乐",
						icon: "iconMusic"
					},
					{
						name: "我的",
						icon: "iconwode1"
					}
				],
				list_home: [],
				music_page: 0

			}
		},
		created() {
			//初始化页面大小 185rpx
			uni.getSystemInfo({
				success: (res) => {
					//console.log(res);
					this.scrollH = res.windowHeight - uni.upx2px(185);
					//console.log(this.scrollH)
				}
			})
			//初始化数据
			this.getMusic();
		},
		onReachBottom() {
			console.log("到底部")
		},
		//过滤器
		filters: {
			formatPlayNum(value) {
				switch (value) {
					case value > 10000:
						return "万" + value;
					default:
						return value;
				}
			}
		},
		computed: {
			...mapState(['hasLogin'])
		},
		methods: {
			...mapMutations(['setMusic']),
			//选择音乐
			selectMusic(index) {
				this.setMusic(this.list_home[index]);
				uni.navigateTo({
					url: "../playing/playing"
				})
			},
			//底部导航栏监听点击事件
			clickIteam(index) {
				console.log(index);
				console.log(this.tabIndex);
				// this.tabIndex = index;
			},
			//下拉加载更多
			LoadMore() {
				console.log("加载更多")
				this.loadState = "loading";
				// setTimeout(() => {
				// 	this.list_home = this.list_home.concat(demo);
				// 	this.loadState = "more";
				// }, 2000);
				this.getMusic();
				console.log("加载完毕");
				this.$forceUpdate();
			},
			//获取歌曲
			getMusic() {
				this.music_page = this.music_page + 1;
				//console.log("获取第" + this.music_page + '页数据');
				uni.request({
					url: service.DOMAIN + 'api/v1.Music/getMusic',
					method: 'POST',
					data: {
						type: 1,
						page: this.music_page,
						limit: 8
					},
					success: res => {
						if (res.data.data.length > 0) {
							this.list_home = [...this.list_home, ...res.data.data];
							this.loadState = "more";
						} else {
							this.music_page = this.music_page - 1;
							this.loadState="noMore"
						}
					},
					fail: () => {},
					complete: () => {
						
					}
				});
			}
		}
	}
</script>

<style>
	page {
		background-color: #000000;
	}

	image {
		/* 去除image上下间隙 */
		margin: 0;
		padding: 0;
		border-bottom: 1px solid black;
		display: block;
	}
</style>
